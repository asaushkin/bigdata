AWSTemplateFormatVersion: '2010-09-09'
Description: Udemy Big Data Course Stack - EC2 LogGenerator

Parameters:
  KinesisDataFirehose:
    Description: Name of an Kinesis Data Firehose pipe to S3 data lake
    Type: String
  CadabraOrders:
    Description: Cadabra real time data stream
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    ConstraintDescription: must be a valid EC2 instance type.
  InstanceRole:
    Description: Role for an EC2 instance
    Type: String
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: '0.0.0.0/0'
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref InstanceRole

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref 'InstanceType'
      SecurityGroups:
        - !Ref 'InstanceSecurityGroup'
      KeyName: !Ref 'KeyName'
      IamInstanceProfile: !Ref EC2InstanceProfile
      ImageId: ami-08d489468314a58df
      UserData:
        Fn::Base64: !Sub |
          Content-Type: multipart/mixed; boundary="//"
          MIME-Version: 1.0

          --//
          Content-Type: text/x-shellscript; charset="us-ascii"
          MIME-Version: 1.0
          Content-Transfer-Encoding: 7bit
          Content-Disposition: attachment; filename="userdata.txt"

          # Get the latest CloudFormation package
          yum update -y aws-cfn-bootstrap
          # Start cfn-init
          /opt/aws/bin/cfn-init -v -s ${AWS::StackId} -r EC2Instance --region ${AWS::Region}
          # Start up the cfn-hup daemon to listen for changes to the EC2 instance metadata
          /opt/aws/bin/cfn-hup
          # All done so signal success
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}
          --//

    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              aws-kinesis-agent: []
          sources:
            /home/ec2-user/bin: http://media.sundog-soft.com/AWSBigData/LogGenerator.zip
          files:
            /etc/aws-kinesis/agent.json:
              content: !Sub |
                {
                  "cloudwatch.emitMetrics": true,
                  "kinesis.endpoint": "kinesis.${AWS::Region}.amazonaws.com",
                  "firehose.endpoint": "firehose.${AWS::Region}.amazonaws.com",

                  "flows": [
                    {
                      "filePattern": "/var/log/cadabra/*.log",
                      "kinesisStream": "${CadabraOrders}",
                      "partitionKeyOption": "RANDOM",
                      "dataProcessingOptions": [
                        {
                          "optionName": "CSVTOJSON",
                          "customFieldNames": ["InvoiceNo", "StockCode", "Description", "Quantity", "InvoiceDate", "UnitPrice", "Customer", "Country"]
                        }
                      ]
                    },
                    {
                      "filePattern": "/var/log/cadabra/*log",
                      "deliveryStream": "${KinesisDataFirehose}"
                    }
                  ]
                }
              mode: "000644"
              owner: "root"
              group: "root"

            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: "000400"
              owner: "root"
              group: "root"

            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}

          commands:
            post-instal:
              command: |
                /bin/mkdir -p /var/log/cadabra
                /bin/chmod 0755 /home/ec2-user/bin/LogGenerator.py
                /bin/chmod 0644 /home/ec2-user/bin/OnlineRetail.csv

          services:
            sysvinit:
              aws-kinesis-agent:
                enabled: 'true'
                ensureRunning: 'true'

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref 'SSHLocation'
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt 'EC2Instance.AvailabilityZone'
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt 'EC2Instance.PublicDnsName'
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt 'EC2Instance.PublicIp'
